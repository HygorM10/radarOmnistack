{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\users\\\\Hygor\\\\Documents\\\\semanaOmnistack10\\\\mobile\\\\src\\\\pages\\\\Main.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MapView from 'react-native-maps';\nimport { requestPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\n\nfunction Main() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentRegion = _useState2[0],\n      setCurrentRegion = _useState2[1];\n\n  useEffect(function () {\n    function loadInitialPosition() {\n      var _await$requestPermiss, granted, _await$getCurrentPosi, coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadInitialPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(requestPermissionsAsync());\n\n            case 2:\n              _await$requestPermiss = _context.sent;\n              granted = _await$requestPermiss.granted;\n\n              if (!granted) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              _await$getCurrentPosi = _context.sent;\n              coords = _await$getCurrentPosi.coords;\n              latitude = coords.latitude, longitude = coords.longitude;\n              setCurrentRegion({\n                latitude: latitude,\n                longitude: longitude,\n                latitudeDelta: 0.04,\n                longitudeDelta: 0.04\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadInitialPosition();\n  }, []);\n\n  if (!currentRegion) {\n    return null;\n  }\n\n  return React.createElement(MapView, {\n    initialRegion: currentRegion,\n    style: styles.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  });\n}\n\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  }\n});\nexport default Main;","map":{"version":3,"sources":["C:/users/Hygor/Documents/semanaOmnistack10/mobile/src/pages/Main.js"],"names":["React","useEffect","useState","MapView","requestPermissionsAsync","getCurrentPositionAsync","Main","currentRegion","setCurrentRegion","loadInitialPosition","granted","enableHighAccuracy","coords","latitude","longitude","latitudeDelta","longitudeDelta","styles","map","StyleSheet","create","flex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,eAAjE;;AAEA,SAASC,IAAT,GAAe;AAAA,kBACiCJ,QAAQ,CAAC,IAAD,CADzC;AAAA;AAAA,MACHK,aADG;AAAA,MACYC,gBADZ;;AAGXP,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAeQ,mBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC8BL,uBAAuB,EADrD;;AAAA;AAAA;AACYM,cAAAA,OADZ,yBACYA,OADZ;;AAAA,mBAGQA,OAHR;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAIiCL,uBAAuB,CAAC;AAC7CM,gBAAAA,kBAAkB,EAAE;AADyB,eAAD,CAJxD;;AAAA;AAAA;AAIgBC,cAAAA,MAJhB,yBAIgBA,MAJhB;AAQgBC,cAAAA,QARhB,GAQwCD,MARxC,CAQgBC,QARhB,EAQ0BC,SAR1B,GAQwCF,MARxC,CAQ0BE,SAR1B;AAUQN,cAAAA,gBAAgB,CAAC;AACbK,gBAAAA,QAAQ,EAARA,QADa;AAEbC,gBAAAA,SAAS,EAATA,SAFa;AAGbC,gBAAAA,aAAa,EAAE,IAHF;AAIbC,gBAAAA,cAAc,EAAE;AAJH,eAAD,CAAhB;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBAP,IAAAA,mBAAmB;AACtB,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,MAAI,CAACF,aAAL,EAAmB;AACf,WAAO,IAAP;AACH;;AAED,SAAO,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAEA,aAAxB;AAAuC,IAAA,KAAK,EAAGU,MAAM,CAACC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,GAAG,EAAE;AACDG,IAAAA,IAAI,EAAE;AADL;AADwB,CAAlB,CAAf;AAMA,eAAef,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport MapView from 'react-native-maps';\r\nimport { requestPermissionsAsync, getCurrentPositionAsync } from 'expo-location';\r\n\r\nfunction Main(){\r\n    const [ currentRegion, setCurrentRegion ] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function loadInitialPosition(){\r\n            const { granted } = await requestPermissionsAsync();\r\n\r\n            if (granted) {\r\n                const { coords } = await getCurrentPositionAsync({\r\n                    enableHighAccuracy: true,\r\n                });\r\n\r\n                const { latitude, longitude } = coords;\r\n\r\n                setCurrentRegion({\r\n                    latitude,\r\n                    longitude,\r\n                    latitudeDelta: 0.04,\r\n                    longitudeDelta: 0.04,\r\n                })\r\n            }\r\n        }\r\n\r\n        loadInitialPosition();\r\n    }, []);\r\n\r\n    if (!currentRegion){\r\n        return null;\r\n    }\r\n\r\n    return <MapView initialRegion={currentRegion} style={ styles.map } />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    map: {\r\n        flex: 1,\r\n    }\r\n})\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}